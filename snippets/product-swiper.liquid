<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css">

<div class="product-gallery-container">
  <div class="swiper product-swiper">
    <div class="swiper-wrapper">
      {% for image in product.images %}
        {% if image.alt != blank %}
          <div class="swiper-slide" data-color="{{ image.alt | downcase | strip }}">
            {{ image | image_url: width: 800 | image_tag: alt: image.alt, class: 'product-image', loading: 'lazy' }}
          </div>
        {% endif %}
      {% endfor %}
    </div>

    {% if section.settings.show_navigation_arrows %}
      <div class="swiper-button-next">&nbsp;</div>
      <div class="swiper-button-prev">&nbsp;</div>
    {% endif %}

    {% if section.settings.show_pagination %}
      <div class="swiper-pagination"></div>
    {% endif %}
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js" defer></script>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const galleryContainer = document.querySelector('.product-gallery-container');
    const swiperElement = document.querySelector('.product-swiper');
    if (!swiperElement) return;

    const swiperInstance = new Swiper(swiperElement, {
      loop: false,
      slidesPerView: {{ section.settings.slides_per_view_mobile | default: 1 }},
      spaceBetween: {{ section.settings.space_between_mobile | default: 10 }},
      pagination: {
        el: '.swiper-pagination',
        clickable: true,
        enabled: {{ section.settings.show_pagination | default: true | json }},
      },
      navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev',
        enabled: {{ section.settings.show_navigation_arrows | default: true | json }},
      },
      breakpoints: {
        768: {
          slidesPerView: {{ section.settings.slides_per_view_tablet | default: 1 }},
          spaceBetween: {{ section.settings.space_between_tablet | default: 16 }},
        },
        1024: {
          slidesPerView: {{ section.settings.slides_per_view_desktop | default: 1 }},
          spaceBetween: {{ section.settings.space_between_desktop | default: 20 }},
        }
      },
      observer: true,
      observeParents: true
    });

    function filterSlidesByColor(color) {
      if (!color) return;
      const normalizedColor = color.toLowerCase().trim();

      // Карта цветов (оставляем по одному значению для каждого цвета)
      const colorMap = {
        'red': '#e93039',
        'green': '#458c0e',
        'yellow': '#d6a92e',
        'blue': '#3182ce'
      };

      const borderColor = colorMap[normalizedColor] || '#1a202c';

      swiperInstance.slides.forEach(slide => {
        if (slide.dataset.color === normalizedColor) {
          slide.style.display = 'flex';
          slide.querySelector('img').style.border = `4px solid ${borderColor}`;
        } else {
          slide.style.display = 'none';
          slide.querySelector('img').style.border = 'none';
        }
      });

      swiperInstance.update();
      swiperInstance.slideTo(0, 0);
    }

    document.addEventListener('click', (event) => {

      const label = event.target.closest('fieldset.js.product-form__input label');


      if (!label) {
        return;
      }

      const inputId = label.getAttribute('for');
      if (inputId) {
        const correspondingInput = document.getElementById(inputId);
        if (correspondingInput) {
          const selectedColor = correspondingInput.value;
          setTimeout(() => {
            filterSlidesByColor(selectedColor);
          }, 50);
        }
      }
    });

    const productForm = document.querySelector('form[action*="/cart/add"]');
    if (productForm) {
      const initialVariantId = productForm.querySelector('[name="id"]').value;
      const productVariants = {{ product.variants | json }};
      const initialVariant = productVariants.find(v => v.id == initialVariantId);
      if (initialVariant && initialVariant.option1) {
        setTimeout(() => {
          filterSlidesByColor(initialVariant.option1);
        }, 150);
      }
    }

    galleryContainer.classList.add('loaded');
  });
</script>
